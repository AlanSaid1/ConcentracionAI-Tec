# -*- coding: utf-8 -*-
"""Asistente_OpenAI.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fn_mnKNCQ-p-tr8DU4SbFvsREN8MIiRt
"""

!pip install openai requests colorama python-dotenv

from colorama import Fore, Style
from openai import OpenAI
import time

api_key = "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"
client = OpenAI(api_key=api_key)

"""## **Paso 1.** Crear un asistente"""

prompt = " You are a sales assitant chatbot that his main labour is to check if an id product is available or not, and also to give information about the price and if it has some discount you have to mention it. The products id that right now are available are:'11234', '11117', '92159', '12345', other id products are not available, and for those products available you only have discount for the product id '12345' with 25% off. You have to be formal when aswering and going direct to the point, do not give irrelevant information, you must give structure to your answer like this (Product id: ,Availability: , price: , Discount percentage: , final price: ) only if the product is available, if not, you just let them know that is not available. Finally you have to make up the product price and name, and if it has discount, give the price with the discount applied."

assistant = client.beta.assistants.create(
    name = "Sales assistant",
    instructions = prompt,
    tools = [{"type":"code_interpreter"}],
    model='gpt-4-1106-preview')

"""## **Paso 2.** Crear un Thread"""

thread = client.beta.threads.create()
print(thread)

"""## **Paso 3.** Agregar mensajes en el thread."""

def check_run(client, thread_id, run_id):
    while True:
        # Obtener el status del asistente
        run = client.beta.threads.runs.retrieve(
            thread_id=thread_id,
            run_id=run_id
        )

        if run.status == "completed":
            print(f"{Fore.GREEN} Run is completed.{Style.RESET_ALL}")
            break
        elif run.status == "expired":
            print(f"{Fore.RED}Run is expired.{Style.RESET_ALL}")
            break
        else:
            print(f"{Fore.YELLOW} OpenAI: Run is not yet completed. Waiting...{run.status} {Style.RESET_ALL}")
            time.sleep(3)  # Wait for 1 second before checking again

def chat_loop(client,thread,assistant):
    i = 0
    print("Hi, im your sales assistant today, how can I help you?")
    while True:
        #if (i==5): # Limitar chat solo a 5 preguntas
        #    break

        # Entrada del usuario
        print(Fore.MAGENTA + "User question: ", end='')
        user_input = input()
        if user_input == "exit": # Cerrar chat si el ususario escribe exit
            break

        # Agregar mensajes al thread
        message = client.beta.threads.messages.create(
            thread_id = thread.id,
            role="user",
            content=user_input)

        # Ejecutar el asistente
        run = client.beta.threads.runs.create(
            thread_id = thread.id,
            assistant_id = assistant.id)

        check_run(client, thread.id, run.id)

        messages = client.beta.threads.messages.list(
            thread_id = thread.id)

        # Desplegar respuesta del asistente
        assistant_message = messages.data[0].content[0].text.value
        print(f"{Fore.BLUE} Assistant: {assistant_message} {Style.RESET_ALL}")
        print(messages.data[0])
        i = i+1

chat_loop(client,thread,assistant)

